local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local camera = workspace.CurrentCamera
local localPlayer = Players.LocalPlayer
local mouse = localPlayer:GetMouse()

local gui = Instance.new("ScreenGui")
gui.ResetOnSpawn = false
gui.Parent = localPlayer:WaitForChild("PlayerGui")

task.spawn(function()
	local introText = "Silent Aim v2.0 | By Schmeckt (PAID PC VERSION)..."

	local introLabel = Instance.new("TextLabel", gui)
	introLabel.Size = UDim2.new(0, 500, 0, 50)
	introLabel.Position = UDim2.new(0.5, -250, 1, 0)
	introLabel.BackgroundTransparency = 1
	introLabel.Font = Enum.Font.GothamBold
	introLabel.TextSize = 24
	introLabel.TextColor3 = Color3.new(1, 1, 1)
	introLabel.Text = ""

	local stroke = Instance.new("UIStroke", introLabel)
	stroke.Color = Color3.new(0, 0, 0)
	stroke.Thickness = 1.5

	local introSound = Instance.new("Sound", introLabel)
	introSound.SoundId = "rbxassetid://5106954314"
	introSound.Volume = 0.5

	local tweenInfoIn = TweenInfo.new(0.7, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
	local goalIn = { Position = UDim2.new(0.5, -250, 0.4, 0) }
	local tweenIn = TweenService:Create(introLabel, tweenInfoIn, goalIn)

	tweenIn:Play()
	introSound:Play()
	tweenIn.Completed:Wait()

	for i = 1, #introText do
		introLabel.Text = string.sub(introText, 1, i)
		task.wait(0.05)
	end

	task.wait(3)

	local tweenInfoOut = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In)
	local goalOut = { Position = UDim2.new(0.5, -250, -0.2, 0) }
	local tweenOut = TweenService:Create(introLabel, tweenInfoOut, goalOut)

	tweenOut:Play()
	tweenOut.Completed:Wait()
	introLabel:Destroy()
end)

-- ██████████████████████████████████████████████████████████████████████████████████████████████████████
-- █                                                                                                    █
-- █           SILENT AIM SYSTEM AUS "LOOTEN" SCRIPT EINGEFÜGT (Original Toggle & GUI bleibt!)          █
-- █                                                                                                    █
-- ██████████████████████████████████████████████████████████████████████████████████████████████████████

-- CONFIG (angepasst für dein Script, aber vom Looten-System inspiriert)
local FOV_RADIUS = 30 * 3 -- 90 Pixel Standard-FOV (kann geändert werden)
local HIT_PART = "Head"    -- Zielpunkt
local PREDICTION_AMOUNT = 0.135 -- Vorhersage
local ENABLE_PREDICTION = true  -- Vorhersage aktiv?

local isAiming = false
local targetPlayer = nil
local highlight = Instance.new("Highlight")
highlight.Name = "SilentHighlight"
highlight.FillTransparency = 1
highlight.OutlineColor = Color3.new(1, 1, 1)
highlight.OutlineTransparency = 0
highlight.Enabled = false
highlight.Parent = game:GetService("CoreGui")

local mainGui = Instance.new("ScreenGui", localPlayer:WaitForChild("PlayerGui"))
mainGui.ResetOnSpawn = false

local statusLabel = Instance.new("TextLabel", mainGui)
statusLabel.Size = UDim2.new(0, 180, 0, 40)
statusLabel.Position = UDim2.new(0.02, 0, 0.5, -20)
statusLabel.BackgroundColor3 = Color3.new(0, 0, 0)
statusLabel.BackgroundTransparency = 0.3
statusLabel.Font = Enum.Font.GothamBold
statusLabel.TextSize = 18
statusLabel.TextColor3 = Color3.fromRGB(255, 80, 80)
statusLabel.Text = "Lock: OFF"
Instance.new("UICorner", statusLabel).CornerRadius = UDim.new(0, 8)

-- HOOK: Überschreibe Mouse.Hit / Mouse.Target für Silent Aim
local mt = getrawmetatable(game)
setreadonly(mt, false)
local oldIndex = mt.__index

mt.__index = function(t, k)
    if t == mouse and (k == "Hit" or k == "Target") and isAiming and targetPlayer then
        local character = targetPlayer.Character
        if not character then return oldIndex(t, k) end

        local aimPart = character:FindFirstChild(HIT_PART)
        if not aimPart then return oldIndex(t, k) end

        local predictedPosition = aimPart.Position
        if ENABLE_PREDICTION and character:FindFirstChild("HumanoidRootPart") then
            local hrp = character.HumanoidRootPart
            local velocity = hrp.Velocity
            predictedPosition = aimPart.Position + velocity * PREDICTION_AMOUNT
        end

        if k == "Hit" then
            return CFrame.new(predictedPosition)
        elseif k == "Target" then
            return aimPart
        end
    end
    return oldIndex(t, k)
end

-- Finde nächstes Ziel innerhalb FOV
local function getClosestTarget()
    local closest = nil
    local shortestDist = FOV_RADIUS

    for _, player in pairs(Players:GetPlayers()) do
        if player == localPlayer or not player.Character then continue end
        local humanoid = player.Character:FindFirstChild("Humanoid")
        if not humanoid or humanoid.Health <= 0 then continue end

        local head = player.Character:FindFirstChild(HIT_PART)
        if not head then continue end

        local screenPos, onScreen = camera:WorldToViewportPoint(head.Position)
        if not onScreen then continue end

        local dist = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(mouse.X, mouse.Y)).Magnitude
        if dist < shortestDist then
            shortestDist = dist
            closest = player
        end
    end

    return closest
end

-- GUI Update Funktion
local function updateGui()
	statusLabel.Text = isAiming and "Lock: ON" or "Lock: OFF"
	statusLabel.TextColor3 = isAiming and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 80, 80)
end

-- Toggle mit Q (wie in deinem Original)
UserInputService.InputBegan:Connect(function(input, gp)
	if gp then return end

	if input.KeyCode == Enum.KeyCode.Q then
		if isAiming then
			isAiming = false
			targetPlayer = nil
			highlight.Adornee = nil
			highlight.Enabled = false
		else
			local target = getClosestTarget()
			if target then
				isAiming = true
				targetPlayer = target
				highlight.Adornee = targetPlayer.Character
				highlight.Enabled = true
			end
		end
		updateGui()
	end
end)

-- Validierung: Ziel noch lebendig?
RunService.RenderStepped:Connect(function()
	if isAiming then
		if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("Humanoid") or targetPlayer.Character.Humanoid.Health <= 0 then
			isAiming = false
			targetPlayer = nil
			highlight.Adornee = nil
			highlight.Enabled = false
			updateGui()
		end
	end
end)

updateGui()
